student_dict = {
    "student": ["Angela", "James", "Lily"], 
    "score": [56, 76, 98]
}

#Looping through dictionaries:
for (key, value) in student_dict.items():
    #Access key and value
    pass

import pandas
student_data_frame = pandas.DataFrame(student_dict)

#Loop through rows of a data frame
for (index, row) in student_data_frame.iterrows():
    #Access index and row
    #Access row.student or row.score
    pass

# Keyword Method with iterrows()
# {new_key:new_value for (index, row) in df.iterrows()}


# Make sure to read the file in Pandas
file = pandas.read_csv('./nato_phonetic_alphabet.csv')
phonetic_df = pandas.DataFrame(file)


#TODO 1. Create a dictionary in this format:
# {"A": "Alfa", "B": "Bravo"}

# this iterates through each row in the data frame, and creates a dictionary containing
# each row's letter: code as the inputs
new_dict = {row.letter: row.code for (index,row) in phonetic_df.iterrows()}
print(new_dict)


#TODO 2. Create a list of the phonetic code words from a word that the user inputs.

# asks the user what word to spell out, and then iterates through that word. When doing a
# loop through a single word, it iterates through each individual letter. So this one
# iterates through each letter, and then checks for that letter in the dictionary. If it
# finds that letter in the dictionary, it takes the value associated with that letter and
# puts it into the list. It loops through until finishing the word (and thus the new list)
on = True
while on:
    try:
        user_input = input('What word would you like spelled out?\n').upper()
        spelled_out = [new_dict[i] for i in user_input]
    except KeyError:
        print("Sorry, only letters in the alphabet please.")
    else:
        print(spelled_out)
        on = False
